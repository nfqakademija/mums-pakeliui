version: "2"
<<<<<<< HEAD

services:
  nginx.symfony:
    container_name: nginx.symfony
    image: nginx:1.13.10
    volumes:
      - .:/code # Mount your code, so nginx/phpcould see it
      - .docker/nginx/site.conf:/etc/nginx/conf.d/site.conf # Use custom virtual hosts
    ports:
      - 127.0.0.1:8000:8000 # For development. Open in browser 127.0.0.1:8000
      - 127.0.0.1:8888:80 # To simulate production. Open in browser 127.0.0.1:8888

  php.symfony:
    container_name: php.symfony
    build: .docker/php/
    environment: # Passing to environment same configuration as in .env file
      - APP_ENV=$APP_ENV
      - APP_SECRET=$APP_SECRET
      - DATABASE_URL=$DATABASE_URL
    volumes:
      - .:/code # Mount your code, so nginx/phpcould see it

  prod.php.symfony:
    container_name: prod.php.symfony
    build: .docker/php/
    environment: # Production environment should not use parameters from .env, but get them via nginx/apache
      - APP_ENV=prod # bin/console use APP_ENV value from environment
    volumes:
      - .:/code # Mount your code, so nginx/phpcould see it

  mysql.symfony:
    container_name: mysql.symfony
    image: mysql:5.7.21
    environment: # During first run root user with is generated with this password
      - MYSQL_ROOT_PASSWORD=p9iijKcfgENjBWDYgSH7
    volumes:
      - .docker/mysql-data/:/var/lib/mysql
    ports:
      - 127.0.0.1:3307:3306 # Connect to it via -h127.0.0.1 --port=3307

  frontend.symfony:
    build: .docker/frontend/
    container_name: frontend.symfony
    volumes:
      - .:/code # Mount your code, so javaScript tools could see it
=======
services:
  nginx:
    image: ongr/nginx
    links:
      - fpm
    ports:
      - "$LOCAL_NGINX_PORT:80"
    volumes:
      - ".docker/config/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./:/var/www"
    networks:
      - frontend
  fpm:
    build:
      context: .docker/build/fpm
      args:
        LOCAL_USER_ID: $LOCAL_USER_ID
        LOCAL_GROUP_ID: $LOCAL_GROUP_ID
    user: "$LOCAL_USER_ID:$LOCAL_GROUP_ID"
    links:
      - mariadb
    volumes:
      - ".docker/.composer:/.composer"
      - "./:/var/www"
      - "$LOCAL_SSH_PRIVATE_KEY:/home/user/.ssh/id_rsa:ro"
    networks:
      - frontend
      - backend
    environment:
      XDEBUG_CONFIG: remote_host=172.27.0.1
  npm:
    image: ongr/nodejs:6.4.0
    user: "$LOCAL_USER_ID:$LOCAL_GROUP_ID"
    volumes:
      - ".docker/.npm:/home/.npm"
      - "./:/home/app"
      - "/usr/local/lib/node_modules"
    networks:
      - frontend
  mariadb-data:
    image: tianon/true
    volumes:
      - /var/lib/mysql
    networks:
      - backend
  mariadb:
    image: mariadb:10.1.10
    ports:
      - "$LOCAL_MYSQL_PORT:3306"
    volumes_from:
      - "mariadb-data"
    environment:
      MYSQL_DATABASE: "$MYSQL_DATABASE"
      MYSQL_ROOT_PASSWORD: root
    networks:
      - backend
networks:
  frontend:
    driver: bridge
    ipam:
      config:
      - subnet: 172.27.0.0/24
  backend:
    driver: bridge
    ipam:
      config:
      - subnet: 172.27.1.0/24
>>>>>>> 849e895edaa0aa44bb175419cbb7e10ef84bde59
